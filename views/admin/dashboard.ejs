<!DOCTYPE html>
<html lang="fr">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Tableau de Bord Admin</title>
  <!-- Bootstrap CSS -->
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/css/bootstrap.min.css" rel="stylesheet">
  <!-- Icônes Bootstrap Icons -->
  <link href="https://cdn.jsdelivr.net/npm/bootstrap-icons/font/bootstrap-icons.css" rel="stylesheet">
  <style>
    body {
      background-color: #f8f9fa;
    }
    .dashboard-container {
      max-width: 1200px;
      margin: 2rem auto;
      padding: 1rem;
      background: #fff;
      border-radius: 8px;
      box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
    }
    .dashboard-container h1 {
      margin-bottom: 1.5rem;
      font-weight: 600;
      color: #333;
    }
    .table th {
      background-color: #f8f9fa;
    }
    .table-hover tbody tr:hover {
      background-color: #f1f1f1;
    }
    .btn-danger {
      width: 7.3rem !important;
    }
    .action-icon {
      cursor: pointer;
      font-size: 1.2rem;
    }
    .action-icon:hover {
      color: #dc3545; /* Rouge Bootstrap */
    }
  </style>
</head>
<body>

<!-- Contenu du tableau de bord -->
<div class="dashboard-container">
  <!-- Section pour ajouter un utilisateur -->
  <div class="mb-5">
    <h2>Ajouter un Utilisateur</h2>
    <form action="/admin/add-user" method="POST">
      <div class="mb-3">
        <label for="name" class="form-label">Nom</label>
        <input type="text" class="form-control" id="name" name="name" required>
      </div>
      <div class="mb-3">
        <label for="email" class="form-label">Email</label>
        <input type="email" class="form-control" id="email" name="email" required>
      </div>
      <div class="mb-3">
        <label for="password" class="form-label">Mot de passe</label>
        <input type="password" class="form-control" id="password" name="password" required>
      </div>
      <button type="submit" class="btn btn-primary">Ajouter</button>
    </form>
  </div>

  <!-- Section pour ajouter un document -->
  <div class="mb-5">
    <h2>Ajouter un Document</h2>
    <form action="/admin/add-document" method="POST">
      <div class="mb-3">
        <label for="title" class="form-label">Titre du document</label>
        <input type="text" class="form-control" id="title" name="title" required>
      </div>
      <div class="mb-3">
        <label for="description" class="form-label">Description</label>
        <textarea class="form-control" id="description" name="description" rows="3" required></textarea>
      </div>
      <button type="submit" class="btn btn-primary">Ajouter</button>
    </form>
  </div>

  <!-- Tableau des utilisateurs -->
  <h1>Liste des Utilisateurs</h1>
  <table class="table table-hover">
    <thead>
      <tr>
        <th scope="col">#</th>
        <th scope="col">Nom</th>
        <th scope="col">Email</th>
        <th scope="col">Date d'inscription</th>
        <th scope="col">Actions</th>
      </tr>
    </thead>
    <tbody>
      <% users.forEach((user, index) => { %>
        <tr>
          <th scope="row"><%= index + 1 %></th>
          <td><%= user.name %></td>
          <td><%= user.email %></td>
          <td><%= new Date(user.createdAt).toLocaleDateString() %></td>
          <td>
            <i class="bi bi-trash action-icon" onclick="deleteUser('<%= user._id %>')"></i>
          </td>
        </tr>
      <% }); %>
    </tbody>
  </table>

  
  <!-- Tableau des documents -->
  <h1 class="mt-5">Liste des Documents</h1>
  <table class="table table-hover">
    <thead>
      <tr>
        <th scope="col">#</th>
        <th scope="col">Titre</th>
        <th scope="col">Auteur</th>
        <th scope="col">Type de document</th>
        <th scope="col">Date de création</th>
        <th scope="col">Actions</th>
      </tr>
    </thead>
    <tbody>
      <% documents.forEach((document, index) => { %>
        <tr>
          <th scope="row"><%= index + 1 %></th>
          <td><%= document.fields.titre_avec_lien_vers_le_catalogue %></td>
          <td><%= document.fields.auteur %></td>
          <td><%= document.fields.type_de_document %></td>
          <td>
            <% if (document.fields.record_timestamp) { %>
              <%= new Date(document.fields.record_timestamp).toLocaleDateString() %>
            <% } else { %>
              Date inconnue
            <% } %>
          </td>
          <td>
            <i class="bi bi-trash action-icon" onclick="deleteDocument('<%= document._id %>')"></i>
          </td>
        </tr>
      <% }); %>
    </tbody>
  </table>
</div>

<!-- Bouton de déconnexion -->
<div>
  <a class="btn btn-danger d-flex w-auto mx-auto" href="/admin/logout">Déconnexion</a>
</div>

<!-- Bootstrap JS (optionnel, pour les fonctionnalités interactives) -->
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/js/bootstrap.bundle.min.js"></script>

<!-- Script pour supprimer un utilisateur ou un document -->
<script>
  function addUser(userData) {
    fetch("/admin/add-user", {
      method: "POST",
      headers: {
        "Content-Type": "application/json",
      },
      body: JSON.stringify(userData),
    })
    .then(response => {
      if (response.ok) {
        window.location.reload(); // Recharger la page après ajout
      } else {
        alert("Une erreur s'est produite lors de l'ajout de l'utilisateur.");
      }
    })
    .catch(error => {
      console.error("Erreur :", error);
    });
  }
  
  function addDocument(documentData) {
    fetch("/admin/add-document", {
      method: "POST",
      headers: {
        "Content-Type": "application/json",
      },
      body: JSON.stringify(documentData),
    })
    .then(response => {
      if (response.ok) {
        window.location.reload(); // Recharger la page après ajout
      } else {
        alert("Une erreur s'est produite lors de l'ajout du document.");
      }
    })
    .catch(error => {
      console.error("Erreur :", error);
    });
  }  
  function deleteUser(userId) {
    if (confirm("Êtes-vous sûr de vouloir supprimer cet utilisateur ?")) {
      fetch(`/admin/delete-user/${userId}`, {
        method: 'DELETE',
      })
      .then(response => {
        if (response.ok) {
          window.location.reload(); // Recharger la page après suppression
        } else {
          alert("Une erreur s'est produite lors de la suppression.");
        }
      })
      .catch(error => {
        console.error("Erreur :", error);
      });
    }
  }

  function deleteDocument(documentId) {
    if (confirm("Êtes-vous sûr de vouloir supprimer ce document ?")) {
      fetch(`/admin/delete-document/${documentId}`, {
        method: 'DELETE',
      })
      .then(response => {
        if (response.ok) {
          window.location.reload(); // Recharger la page après suppression
        } else {
          alert("Une erreur s'est produite lors de la suppression.");
        }
      })
      .catch(error => {
        console.error("Erreur :", error);
      });
    }
  }
</script>
</body>
</html>